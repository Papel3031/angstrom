[workspace]
members = [
  "crates/guard-net/network",
  "crates/guard-net/eth-wire",
  "crates/guard-net/discv4",
  "crates/storage/db",
  "crates/action",
  "crates/sync",
  "crates/consensus",
  "crates/types",
  "it-harness",
]

[workspace.package]
version = "0.1.0"
edition = "2021"
rust-version = "1.70"
license = "MIT OR Apache-2.0"
homepage = "https://github.com/SorellaLabs/stale-guard"
repository = "https://github.com/SorellaLabs/stale-guard"
exclude = [".github/"]

[package]
name = "stale-guard"
version.workspace = true
edition.workspace = true

[profile.release]
lto = "fat"
opt-level = 3
codegen-units = 15

[profile.maxperf]
inherits = "release"
lto = "fat"
codegen-units = 1
incremental = false

[dependencies]
tokio.workspace = true
futures.workspace = true
thiserror.workspace = true
reth-network.workspace = true
reth-primitives.workspace = true
ethers-providers.workspace = true
ethers-signers.workspace = true
ethers-middleware.workspace = true
ethers-core.workspace = true
tracing.workspace = true
reth-rpc-builder.workspace = true
async-trait.workspace = true
tokio-stream.workspace = true
serde.workspace = true
anyhow.workspace = true
url.workspace = true
reth-tracing.workspace = true
serde_json.workspace = true
hex-literal.workspace = true

guard-types.workspace = true
consensus.workspace = true
action.workspace = true
sim.workspace = true

rand = "0.8.5"
jsonrpsee = { workspace = true, features = ["server"] }
tower-http = { version = "0.4", features = ["full"] }
tower = { version = "0.4", features = ["full"] }
hyper = "0.14"

parking_lot = "0.12"
guard-network = { path = "./crates/guard-net/network/" }
futures-util = "0.3.28"
tokio-util = { version = "0.7.4", features = ["codec"] }
soketto = "0.7.1"
jsonrpsee-core = { version = "0.20" }
jsonrpsee-types = { version = "0.20" }
clap = { version = "4", features = ["derive"] }
fdlimit = "0.2.1"

[patch.crates-io]
revm = { git = "https://github.com/bluealloy/revm/", branch = "release/v25" }
revm-primitives = { git = "https://github.com/bluealloy/revm/", branch = "release/v25" }

[workspace.dependencies]
revm = { version = "3" }
revm-primitives = "1.1"
reth-primitives = { git = "https://github.com/paradigmxyz/reth", rev = "d8b1609" }
reth-interfaces = { git = "https://github.com/paradigmxyz/reth", rev = "d8b1609" }
reth-provider = { git = "https://github.com/paradigmxyz/reth", rev = "d8b1609" }
reth-db = { git = "https://github.com/paradigmxyz/reth", rev = "d8b1609" }
reth-rlp = { git = "https://github.com/paradigmxyz/reth", rev = "d8b1609", features = [
  "alloc",
] }
reth-codecs = { git = "https://github.com/paradigmxyz/reth", rev = "d8b1609" }
reth-ecies = { git = "https://github.com/paradigmxyz/reth", rev = "d8b1609" }
reth-rpc-types = { git = "https://github.com/paradigmxyz/reth", rev = "d8b1609" }
reth-rpc-builder = { git = "https://github.com/paradigmxyz/reth", rev = "d8b1609" }
reth-blockchain-tree = { git = "https://github.com/paradigmxyz/reth", rev = "d8b1609" }
reth-beacon-consensus = { git = "https://github.com/paradigmxyz/reth", rev = "d8b1609" }
reth-metrics = { git = "https://github.com/paradigmxyz/reth", rev = "d8b1609" }
reth-revm = { git = "https://github.com/paradigmxyz/reth", rev = "d8b1609" }
reth-payload-builder = { git = "https://github.com/paradigmxyz/reth", rev = "d8b1609" }
reth-transaction-pool = { git = "https://github.com/paradigmxyz/reth", rev = "d8b1609" }
reth-tasks = { git = "https://github.com/paradigmxyz/reth", rev = "d8b1609" }
reth-tracing = { git = "https://github.com/paradigmxyz/reth", rev = "d8b1609" }
reth-network = { git = "https://github.com/paradigmxyz/reth", rev = "d8b1609" }
reth-network-api = { git = "https://github.com/paradigmxyz/reth", rev = "d8b1609" }
reth-rpc-types-compat = { git = "https://github.com/paradigmxyz/reth", rev = "d8b1609" }

hex-literal = "0.4.1"
ethers-core = { version = "2.0", default-features = false }
ethers-providers = { version = "2.0", features = ["ws"] }
ethers-signers = { version = "2.0", default-features = false }
ethers-middleware = { version = "2.0", default-features = false }

consensus = { path = "./crates/consensus/" }
guard-types = { path = "./crates/types/" }
action = { path = "./crates/action/" }
sim = { path = "./crates/sim/" }
guard-db = { path = "./crates/storage/db/" }

anvil = { git = "https://github.com/SorellaLabs/fastfoundry" }
anvil-core = { git = "https://github.com/SorellaLabs/fastfoundry" }

## misc
bytes = "1.4"
bitflags = "2.3"
tracing = "0.1.0"
tracing-appender = "0.2"
thiserror = "1.0"
serde_json = "1.0.94"
serde = { version = "1.0", default-features = false }
rand = "0.8.5"
strum = "0.25"
rayon = "1.7"
itertools = "0.11"
parking_lot = "0.12"
metrics = "0.21.1"                                    # Needed for `metrics-macro` to resolve the crate using `::metrics` notation
anyhow = "1.0.75"
url = "2.4.1"
auto_impl = "1.1.0"

### proc-macros
proc-macro2 = "1.0"
quote = "1.0"

## tokio
tokio-stream = "0.1.11"
tokio = { version = "1.21", default-features = false }
tokio-util = { version = "0.7.4", features = ["codec"] }

## async
async-trait = "0.1.68"
futures = "0.3.26"
pin-project = "1.0.12"
futures-util = "0.3.25"

## json
jsonrpsee = { version = "0.20" }
jsonrpsee-core = { version = "0.20" }
jsonrpsee-types = { version = "0.20" }

## crypto
secp256k1 = { version = "0.27.0", default-features = false, features = [
  "global-context",
  "rand-std",
  "recovery",
] }
enr = { version = "0.9", default-features = false, features = ["k256"] }
# for eip-4844
c-kzg = { git = "https://github.com/ethereum/c-kzg-4844" }

### misc-testing
proptest = "1.0"
proptest-derive = "0.4"
arbitrary = "1.1"
assert_matches = "1.5.0"


[features]
test_harness = ["action/test_harness", "guard-network/test_harness"]
