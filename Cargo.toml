[workspace]
members = [
  "bin/stale-guard",
  "crates/guard-net",
  "crates/consensus",
  "crates/types",
  "crates/utils",
  "crates/validation",
  "crates/order-pool",
  "crates/rpc",
  "crates/eth/",
  "crates/submission",
]


#default-members = ["bin/stale-guard"]

# Explicitly set the resolver to version 2, which is the default for packages with edition >= 2021
# https://doc.rust-lang.org/edition-guide/rust-2021/default-cargo-resolver.html
resolver = "2"


[workspace.package]
version = "0.1.0"
edition = "2021"
rust-version = "1.75"
license = "MIT OR Apache-2.0"
homepage = "https://github.com/SorellaLabs/stale-guard"
repository = "https://github.com/SorellaLabs/stale-guard"
exclude = [".github/"]


[profile.release]
lto = "fat"
opt-level = 3
codegen-units = 15

[profile.maxperf]
inherits = "release"
lto = "fat"
codegen-units = 1
incremental = false


[workspace.dependencies]
consensus = { path = "./crates/consensus/" }
guard-types = { path = "./crates/types/" }
guard-utils = { path = "./crates/utils/" }
validation = { path = "./crates/validation/" }
order-pool = { path = "./crates/order-pool/" }
guard-eth = { path = "./crates/eth/" }
guard-rpc = { path = "./crates/rpc/" }
guard-network = { path = "./crates/guard-net/" }


## async
async-trait = "0.1.68"
futures = "0.3.26"
pin-project = "1.1.3"
futures-util = "0.3.29"

# revm
revm = { git = "https://github.com/bluealloy/revm", branch="reth_freeze", features = [
  "std",
  "secp256k1",
], default-features = false }

# reth
reth = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-primitives = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-interfaces = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-provider = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-db = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-rlp = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58", features = [
  "alloc",
] }
reth-codecs = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-ecies = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-rpc-types = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-rpc-builder = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-blockchain-tree = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-beacon-consensus = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-metrics = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-revm = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-payload-builder = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-transaction-pool = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-tasks = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-tracing = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-network = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-network-api = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-rpc-types-compat = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-libmdbx = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-eth-wire = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }
reth-tokio-util = { git = "https://github.com/paradigmxyz/reth", rev = "d8a9b58" }

# alloy
alloy-sol-types = { version = "0.6.0", features = ["json"] }
alloy-sol-macro = { version = "0.6.0", features = ["json"] }
alloy-rlp = { version = "0.3.4" }
alloy-rlp-derive = { version = "0.3.4" }
alloy-primitives = { version = "0.6.0", features = ["rlp"] }

# alloy rpc
#alloy-providers = { git = "https://github.com/alloy-rs/alloy"}
#alloy-rpc-types = { git = "https://github.com/alloy-rs/alloy"}

hex-literal = "0.4.1"
ethers-core = { version = "2.0.10", default-features = false }
ethers-providers = { version = "2.0.10", features = ["ws"] }
ethers-signers = { version = "2.0.10", default-features = false }
ethers-middleware = { version = "2.0.10", default-features = false }


# anvil = { git = "https://github.com/SorellaLabs/fastfoundry" }
# anvil-core = { git = "https://github.com/SorellaLabs/fastfoundry" }

## misc
bytes = "1.4"
bitflags = "2.3"
tracing = "0.1.0"
tracing-appender = "0.2"
thiserror = "1.0"
serde_json = "1.0.94"
serde = { version = "1.0", default-features = false }
rand = "0.8.5"
strum = "0.25"
rayon = "1.7"
itertools = "0.11"
parking_lot = "0.12"
metrics = "0.21.1"                                    # Needed for `metrics-macro` to resolve the crate using `::metrics` notation
anyhow = "1.0.75"
url = "2.4.1"
auto_impl = "1.1.0"

### proc-macros
proc-macro2 = "1.0"
quote = "1.0"

## tokio
tokio-stream = "0.1.11"
tokio = { version = "1.21", features = ["full"], default-features = false }
tokio-util = { version = "0.7.4", features = ["codec"] }


## json
jsonrpsee = { version = "0.20" }
jsonrpsee-core = { version = "0.20" }
jsonrpsee-types = { version = "0.20" }


## crypto
secp256k1 = { version = "0.27.0", default-features = false, features = [
  "global-context",
  "rand-std",
  "recovery",
] }
enr = { version = "0.9", default-features = false, features = ["k256"] }


aquamarine = "0.3"

# misc-testing
arbitrary = "1.1"
assert_matches = "1.5.0"
tempfile = "3.8"
criterion = "0.5"
pprof = "0.13"
proptest = "1.0"
proptest-derive = "0.4"
serial_test = "2"
